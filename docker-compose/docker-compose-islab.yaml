# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer0.islab.re.kr:
  orderer1.islab.re.kr:
  orderer2.islab.re.kr:
  # orderer.islab.re.kr:
  peer0.ai.islab.re.kr:
  peer0.blockchain.islab.re.kr:
  peer0.security.islab.re.kr:

networks:
  test:

services:
  orderer0.islab.re.kr:
    container_name: orderer0.islab.re.kr
    image: hyperledger/fabric-orderer:2.2
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererOrg
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../build/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../build/crypto-config/ordererOrganizations/islab.re.kr/orderers/orderer0.islab.re.kr/msp:/var/hyperledger/orderer/msp
        - ../build/crypto-config/ordererOrganizations/islab.re.kr/orderers/orderer0.islab.re.kr/tls/:/var/hyperledger/orderer/tls
    ports:
      - 7050:7050
    networks:
      - test

  orderer1.islab.re.kr:
    container_name: orderer1.islab.re.kr
    image: hyperledger/fabric-orderer:2.2
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../build/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../build/crypto-config/ordererOrganizations/islab.re.kr/orderers/orderer1.islab.re.kr/msp:/var/hyperledger/orderer/msp
        - ../build/crypto-config/ordererOrganizations/islab.re.kr/orderers/orderer1.islab.re.kr/tls/:/var/hyperledger/orderer/tls
    ports:
      - 8050:7050
    networks:
      - test

  orderer2.islab.re.kr:
    container_name: orderer2.islab.re.kr
    image: hyperledger/fabric-orderer:2.2
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../build/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../build/crypto-config/ordererOrganizations/islab.re.kr/orderers/orderer2.islab.re.kr/msp:/var/hyperledger/orderer/msp
        - ../build/crypto-config/ordererOrganizations/islab.re.kr/orderers/orderer2.islab.re.kr/tls/:/var/hyperledger/orderer/tls
    ports:
      - 9050:7050
    networks:
      - test

  peer0.ai.islab.re.kr:
    container_name: peer0.ai.islab.re.kr
    image: hyperledger/fabric-peer:2.2
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=docker-compose_test
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.ai.islab.re.kr
      - CORE_PEER_ADDRESS=peer0.ai.islab.re.kr:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.ai.islab.re.kr:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.ai.islab.re.kr:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.ai.islab.re.kr:7051
      - CORE_PEER_LOCALMSPID=aiMSP
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ../build/crypto-config/peerOrganizations/ai.islab.re.kr/peers/peer0.ai.islab.re.kr/msp:/etc/hyperledger/fabric/msp
        - ../build/crypto-config/peerOrganizations/ai.islab.re.kr/peers/peer0.ai.islab.re.kr/tls:/etc/hyperledger/fabric/tls
        - peer0.ai.islab.re.kr:/var/hyperledger/production
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    ports:
      - 7051:7051
    networks:
      - test

  peer0.blockchain.islab.re.kr:
    container_name: peer0.blockchain.islab.re.kr
    image: hyperledger/fabric-peer:2.2
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=docker-compose_test
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.blockchain.islab.re.kr
      - CORE_PEER_ADDRESS=peer0.blockchain.islab.re.kr:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.blockchain.islab.re.kr:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.blockchain.islab.re.kr:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.blockchain.re.kr:7051
      - CORE_PEER_LOCALMSPID=blockchainMSP
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ../build/crypto-config/peerOrganizations/blockchain.islab.re.kr/peers/peer0.blockchain.islab.re.kr/msp:/etc/hyperledger/fabric/msp
        - ../build/crypto-config/peerOrganizations/blockchain.islab.re.kr/peers/peer0.blockchain.islab.re.kr/tls:/etc/hyperledger/fabric/tls
        - peer0.blockchain.islab.re.kr:/var/hyperledger/production
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    ports:
      - 8051:7051
    networks:
      - test

  peer0.security.islab.re.kr:
    container_name: peer0.security.islab.re.kr
    image: hyperledger/fabric-peer:2.2
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=docker-compose_test
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.security.islab.re.kr
      - CORE_PEER_ADDRESS=peer0.security.islab.re.kr:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.security.islab.re.kr:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.security.islab.re.kr:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.security.re.kr:7051
      - CORE_PEER_LOCALMSPID=securityMSP
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ../build/crypto-config/peerOrganizations/security.islab.re.kr/peers/peer0.security.islab.re.kr/msp:/etc/hyperledger/fabric/msp
        - ../build/crypto-config/peerOrganizations/security.islab.re.kr/peers/peer0.security.islab.re.kr/tls:/etc/hyperledger/fabric/tls
        - peer0.security.islab.re.kr:/var/hyperledger/production
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    ports:
      - 9051:7051
    networks:
      - test

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:2.2
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=docker-compose_test
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_ID=peer0.ai.islab.re.kr
      - CORE_PEER_ADDRESS=peer0.ai.islab.re.kr:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.ai.islab.re.kr:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.ai.islab.re.kr:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.ai.re.kr:7051
      - CORE_PEER_LOCALMSPID=aiMSP
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../config:/opt/gopath/src/github.com/hyperledger/fabric/config
        - ../build:/opt/gopath/src/github.com/hyperledger/fabric/peer
        - ../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/chaincode
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    depends_on:
      - peer0.ai.islab.re.kr
      - peer0.blockchain.islab.re.kr
      - peer0.security.islab.re.kr
    networks:
      - test